{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nRight = Rotation(Ports.PORT8, True)\nLeft = Rotation(Ports.PORT20, False)\nBackLeft_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_6_1, False)\nBackLeft_motor_b = Motor(Ports.PORT2, GearSetting.RATIO_6_1, False)\nBackLeft = MotorGroup(BackLeft_motor_a, BackLeft_motor_b)\nFrontLeft = Motor(Ports.PORT5, GearSetting.RATIO_6_1, True)\nBackRight_motor_a = Motor(Ports.PORT7, GearSetting.RATIO_6_1, True)\nBackRight_motor_b = Motor(Ports.PORT11, GearSetting.RATIO_6_1, True)\nBackRight = MotorGroup(BackRight_motor_a, BackRight_motor_b)\nFrontRight = Motor(Ports.PORT10, GearSetting.RATIO_6_1, False)\nCenter = Rotation(Ports.PORT19, False)\nIntake = Motor(Ports.PORT9, GearSetting.RATIO_6_1, False)\nWings = DigitalOut(brain.three_wire_port.b)\nIntakeUp = DigitalOut(brain.three_wire_port.c)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ----------------------------------------------------------------------------\n#                                                                            \n#    Project:        Right Sensing                                            \n#    Description:    This example will show all of the available     \n#                    commands for using the Right Sensor\n#    Configuration:  V5 Speedbot (Drivetrain 2-motor, No Gyro)\n#                    Right Sensor in Port 2                 \n#                                                                            \n# ----------------------------------------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\n\n\nRight.set_position(0, DEGREES)\nLeft.set_position(0, DEGREES)\nCenter.set_position(0, DEGREES)\n\nimport math\n\nFrontLeft.set_velocity(100,RPM)\nFrontRight.set_velocity(100,RPM)\nBackLeft.set_velocity(100,RPM)\nBackRight.set_velocity(100,RPM)\nIntake.set_velocity(600,RPM)\n\nIntakeUp.set(False)\n\ndef RightTurn():\n    BackRight.spin(FORWARD)\n    FrontRight.spin(FORWARD)\n\ndef LeftTurn():\n    BackLeft.spin(FORWARD)\n    FrontLeft.spin(FORWARD)\n\ndef LeftBackTurn():\n    BackLeft.spin(REVERSE)\n    FrontLeft.spin(REVERSE)\n\ndef RightBackTurn():\n    BackRight.spin(REVERSE)\n    FrontRight.spin(REVERSE)\n\ndef Forward():\n    LeftTurn()\n    RightTurn()\n\ndef Backwards():\n    LeftBackTurn()\n    RightBackTurn()\n\ndef StopLeft():\n    FrontLeft.stop()\n    BackLeft.stop()\n\ndef StopRight():\n    FrontRight.stop()\n    BackRight.stop()\n\ndef Stop():\n    StopRight()\n    StopLeft()\n\ndef OneTurn():\n    Right.set_position(0)\n    Forward()\n    while Right.position(DEGREES)<360:\n       Forward()\n    while Right.position(DEGREES)>360:\n        Stop()\n        Brake()\n        break\n\ndef Inch():\n    Right.set_position(0, DEGREES)\n    Forward()\n    while Right.position(DEGREES)<360*(1/(2.75*(math.pi))):\n        Forward()\n    while Right.position(DEGREES)>360*(1/(2.75*(math.pi))):\n        Stop()\n        Brake()\n        break\n\ndef Foot():\n    Right.set_position(0, DEGREES)\n    Forward()\n    while Right.position(DEGREES)<360*(12/(2.75*(math.pi)))/2:\n        Forward()\n    while Right.position(DEGREES)>360*(12/(2.75*(math.pi)))/2:\n        Stop()\n        Brake()\n        break\n\ndef ReverseFoot():\n    Right.set_position(0, DEGREES)\n    Backwards()\n    while Right.position(DEGREES)>-360*(12/(2.75*(math.pi)))/2:\n        Backwards()\n    while Right.position(DEGREES)<-360*(12/(2.75*(math.pi)))/2:\n        Stop()\n        Brake()\n        break\n\ndef ReverseInch():\n    Right.set_position(0, DEGREES)\n    Backwards()\n    while Right.position(DEGREES)>-360*(1/(2.75*(math.pi)))/2:\n        Backwards()\n    while Right.position(DEGREES)<-360*(1/(2.75*(math.pi)))/2:\n        Stop()\n        Brake()\n        break\n   \ndef RightRight():\n    Center.set_position(0,DEGREES)\n    LeftTurn()\n    RightBackTurn()\n    while Center.position(TURNS)<1.1:\n        LeftTurn()\n        RightBackTurn()\n    while Center.position(TURNS)>1.1:\n        Stop()\n        Brake()\n        break\n\n\ndef RightRightHalf():\n    Center.set_position(0,DEGREES)\n    LeftTurn()\n    RightBackTurn()\n    while Center.position(TURNS)<.45:\n        LeftTurn()\n        RightBackTurn()\n    while Center.position(TURNS)>.45:\n        Stop()\n        Brake()\n        break\n\n\ndef LeftRight():\n    Center.set_position(0,DEGREES)\n    LeftBackTurn()\n    RightTurn()\n    while Center.position(TURNS)>-1.1:\n        LeftBackTurn()\n        RightTurn()\n    while Center.position(TURNS)<-1.1:\n        Stop()\n        Brake()\n        break\n\ndef IntakeIn():\n    Intake.spin(FORWARD)\n    wait(3,SECONDS)\n    Intake.stop()\n\ndef IntakeOut():\n    Intake.spin(REVERSE)\n    wait(1,SECONDS)\n    Intake.stop()\n\ndef WingsOut():\n    Wings.set(True)\n\ndef WingsIn():\n    Wings.set(False)\n\ndef Brake():\n    BackLeft.set_stopping(BRAKE)\n    BackRight.set_stopping(BRAKE)\n    FrontLeft.set_stopping(BRAKE)\n    FrontRight.set_stopping(BRAKE)\n    wait(.1,SECONDS)\n    BackLeft.set_stopping(COAST)\n    BackRight.set_stopping(COAST)\n    FrontLeft.set_stopping(COAST)\n    FrontRight.set_stopping(COAST)\n\ndef ReverseDInches():\n    Right.set_position(0, DEGREES)\n    Backwards()\n    while Right.position(DEGREES)>-360*(D/(2.75*(math.pi)))/2:\n        Backwards()\n    while Right.position(DEGREES)<-360*(D/(2.75*(math.pi)))/2:\n        Stop()\n        Brake()\n        break\n\ndef DInches():\n    Right.set_position(0, DEGREES)\n    Forward()\n    while Right.position(DEGREES)<360*(D/(2.75*(math.pi)))/2:\n        Forward()\n    while Right.position(DEGREES)>360*(D/(2.75*(math.pi)))/2:\n        Stop()\n        Brake()\n        break\n\ndef RightT():\n    Center.set_position(0,DEGREES)\n    LeftTurn()\n    RightBackTurn()\n    while Center.position(TURNS)<2.75/(10/(360/T)):\n        LeftTurn()\n        RightBackTurn()\n    while Center.position(TURNS)>2.75/(10/(360/T)):\n        Stop()\n        Brake()\n        break\n\ndef LeftT():\n    Center.set_position(0,DEGREES)\n    LeftBackTurn()\n    RightTurn()\n    while Center.position(TURNS)>-2.75/(10/(360/T)):\n        LeftBackTurn()\n        RightTurn()\n    while Center.position(TURNS)<-2.75/(10/(360/T)):\n        Stop()\n        Brake()\n        break\n\n\n\nD=22\nReverseDInches()\nWingsOut()\nLeftRight()\nWingsIn()\nLeftRight()\nD=32\nDInches()\nRightRightHalf()\nD=8\nDInches()\nIntakeOut()\nIntakeUp.set(True)\nD=5\nDInches()\nReverseDInches()\nIntakeUp.set(False)\nT=78\nRightT()\nD=140\nDInches\nFrontLeft.set_velocity(200,RPM)\nFrontRight.set_velocity(200,RPM)\nBackLeft.set_velocity(200,RPM)\nBackRight.set_velocity(200,RPM)\nFoot()","textLanguage":"python","rconfig":[{"port":[8],"name":"Right","customName":true,"deviceType":"Rotation","deviceClass":"rotation","setting":{"reversed":"true"},"triportSourcePort":22},{"port":[20],"name":"Left","customName":true,"deviceType":"Rotation","deviceClass":"rotation","setting":{"reversed":"false"},"triportSourcePort":22},{"port":[1,2],"name":"BackLeft","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"false","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[5],"name":"FrontLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[7,11],"name":"BackRight","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[10],"name":"FrontRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[19],"name":"Center","customName":true,"deviceType":"Rotation","deviceClass":"rotation","setting":{"reversed":"false"},"triportSourcePort":22},{"port":[9],"name":"Intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[2],"name":"Wings","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{},"triportSourcePort":22},{"port":[3],"name":"IntakeUp","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20240219.10.00.00","appVersion":"3.1.0","minVersion":"3.1.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}