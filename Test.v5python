{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19,  1995, 40, MM, 1)\nrotation_19 = Rotation(Ports.PORT19, False)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait( 1900, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[  19J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ----------------------------------------------------------------------------\n#                                                                            \n#    Project:        Rotation Sensing                                            \n#    Description:    This example will show all of the available     \n#                    commands for using the Rotation Sensor\n#    Configuration:  V5 Speedbot (Drivetrain  19-motor, No Gyro)\n#                    Rotation Sensor in Port  19                 \n#                                                                            \n# ----------------------------------------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n\n# Reset the position of the rotation sensor\nrotation_19.set_position(0, DEGREES)\n\n# Print all Rotation sensor values to the screen in an infinite loop\nwhile True:\n    # Clear the screen and set the cursor to top left corner on each loop\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1,1)\n\n    brain.screen.print(\"Angle:\", rotation_19.angle())\n    brain.screen.next_row()\n\n    brain.screen.print(\"Position DEGREES:\", rotation_19.position(DEGREES))\n    brain.screen.next_row()\n\n    brain.screen.print(\"Position TURNS:\", rotation_19.position(TURNS))\n    brain.screen.next_row()\n\n    brain.screen.print(\"Velocity RPM:\", rotation_19.velocity(VelocityUnits.RPM))\n    brain.screen.next_row()\n\n    brain.screen.print(\"Velocity DPS:\", rotation_19.velocity(VelocityUnits.DPS))\n    brain.screen.next_row()\n\n    # A brief delay to allow text to be printed without distortion or tearing\n    wait(50,MSEC)","textLanguage":"python","rconfig":[{"port":[1,10,null],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm"},"triportSourcePort":null},{"port":[19],"name":"rotation_19","customName":false,"deviceType":"Rotation","deviceClass":"rotation","setting":{"reversed":"false"},"triportSourcePort":22}],"slot":3,"platform":"V5","sdkVersion":"20240219.10.00.00","appVersion":"3.1.0","minVersion":"3.1.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}